{"version":3,"file":"bootstrap-vue.js","sources":["../lib/utils/observe-dom.js","../lib/directives/_target.js","../lib/components/alert.vue","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-group.vue","../lib/mixins/clickout.js","../lib/mixins/dropdown.js","../lib/components/button-group-dropdown.vue","../lib/components/input-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/mixins/generate-id.js","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/components/form-checkbox.vue","../lib/mixins/form-options.js","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/modal.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/pagination.vue","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["/**\r\n * Observe a DOM element changes, falls back to eventListener mode\r\n * @param {Element} el The DOM element to observe\r\n * @param {Function} callback callback to be called on change\r\n * @param {object} [opts={childList: true, subtree: true}] observe options\r\n * @see http://stackoverflow.com/questions/3219758\r\n */\r\nexport default function observeDOM(el, callback, opts) {\r\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\r\n    const eventListenerSupported = window.addEventListener;\r\n\r\n    if (MutationObserver) {\r\n        // Define a new observer\r\n        const obs = new MutationObserver(mutations => {\r\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\r\n                callback();\r\n            }\r\n        });\r\n\r\n        // Have the observer observe foo for changes in children\r\n        obs.observe(el, Object.assign({childList: true, subtree: true}, opts));\r\n    } else if (eventListenerSupported) {\r\n        el.addEventListener('DOMNodeInserted', callback, false);\r\n        el.addEventListener('DOMNodeRemoved', callback, false);\r\n    }\r\n}\r\n","const all_listen_types = {hover: true, click: true, focus: true};\r\n\r\nexport default function targets(el, binding, listen_types, fn) {\r\n    const vm = el.__vue__;\r\n\r\n    if (!vm) {\r\n        console.warn('__vue__ is not available on element', el);\r\n        return;\r\n    }\r\n\r\n    const targets = Object.keys(binding.modifiers || {})\r\n        .filter(t => !all_listen_types[t]);\r\n\r\n    if (binding.value) {\r\n        targets.push(binding.value);\r\n    }\r\n\r\n    const listener = () => {\r\n        fn({targets, vm});\r\n    };\r\n\r\n    Object.keys(all_listen_types).forEach(type => {\r\n        if (listen_types[type] || binding.modifiers[type]) {\r\n            console.log(type);\r\n            el.addEventListener(type, listener);\r\n        }\r\n    });\r\n}\r\n","<template>\r\n    <div v-if=\"localShow\"\r\n         :class=\"classObject\"\r\n         role=\"alert\"\r\n         aria-live=\"polite\"\r\n         aria-atomic=\"true\"\r\n    >\r\n        <button type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"alert\"\r\n                aria-label=\"dismissLabel\"\r\n                v-if=\"dismissible\"\r\n                @click.stop.prevent=\"dismiss\"\r\n        >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                countDownTimerId: null,\r\n                dismissed: false\r\n            };\r\n        },\r\n        created() {\r\n            if (this.state) {\r\n                console.warn('<b-alrt> state property is deprecated, please use variant instead.');\r\n            }\r\n        },\r\n        computed: {\r\n            classObject() {\r\n                return ['alert', this.alertVariant, this.dismissible ? 'alert-dismissible' : ''];\r\n            },\r\n            alertVariant() {\r\n                const variant = this.state || this.variant || 'info';\r\n                return `alert-${variant}`;\r\n            },\r\n            localShow() {\r\n                return !this.dismissed && (this.countDownTimerId || this.show);\r\n            }\r\n        },\r\n        props: {\r\n            variant: {\r\n                type: String,\r\n                default: 'info'\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            dismissible: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            dismissLabel: {\r\n                type: String,\r\n                default: 'Close'\r\n            },\r\n            show: {\r\n                type: [Boolean, Number],\r\n                default: false\r\n            }\r\n        },\r\n        watch: {\r\n            show() {\r\n                this.showChanged();\r\n            }\r\n        },\r\n        mounted() {\r\n            this.showChanged();\r\n        },\r\n        methods: {\r\n            dismiss() {\r\n                this.dismissed = true;\r\n                this.$emit('dismissed');\r\n                this.clearCounter();\r\n            },\r\n            clearCounter() {\r\n                if (this.countDownTimerId) {\r\n                    clearInterval(this.countDownTimerId);\r\n                }\r\n            },\r\n            showChanged() {\r\n                // Reset dismiss status\r\n                this.dismissed = false;\r\n\r\n                // No timer for boolean values\r\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\r\n                    return;\r\n                }\r\n\r\n                let dismissCountDown = this.show;\r\n                this.$emit('dismiss-count-down', dismissCountDown);\r\n\r\n                // Start counter\r\n                this.clearCounter();\r\n                this.countDownTimerId = setInterval(() => {\r\n                    if (dismissCountDown < 2) {\r\n                        return this.dismiss();\r\n                    }\r\n                    dismissCountDown--;\r\n                    this.$emit('dismiss-count-down', dismissCountDown);\r\n                }, 1000);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <!-- When VueRouter is available -->\r\n    <a v-if=\"routerAvailable\"\r\n       is=\"router-link\"\r\n       :active-class=\"activeClass\"\r\n       :exact-active-class=\"exactActiveClass\"\r\n       :disabled=\"disabled\"\r\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\r\n       :to=\"_to\"\r\n       :exact=\"exact\"\r\n       :append=\"append\"\r\n       :replace=\"replace\"\r\n       :event=\"event\"\r\n       :tag=\"tag\"\r\n       @click=\"click\"\r\n    >\r\n        <slot></slot>\r\n    </a>\r\n\r\n    <!-- Fallback mode -->\r\n    <a v-else\r\n       :disabled=\"disabled\"\r\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\r\n       :href=\"_href\"\r\n       @click=\"click\"\r\n    >\r\n        <slot></slot>\r\n    </a>\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n        computed: {\r\n            routerAvailable() {\r\n                return Boolean(this.$router);\r\n            },\r\n            _href() {\r\n                if (this.disabled) {\r\n                    return '#';\r\n                }\r\n\r\n                // If href explicitly provided\r\n                if (this.href) {\r\n                    return this.href;\r\n                }\r\n\r\n                // Fallback to `to` prop\r\n                if (this.to && typeof this.to === 'string') {\r\n                    return this.to;\r\n                }\r\n            },\r\n            _to() {\r\n                if (!this.routerAvailable || this.disabled) {\r\n                    return '#';\r\n                }\r\n\r\n                if (this.to) {\r\n                    return this.to;\r\n                }\r\n\r\n                if (this.href) {\r\n                    return this.href;\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            // https://github.com/vuejs/vue-router/blob/dev/src/components/link.js\r\n            to: {\r\n                type: [String, Object],\r\n                default: null\r\n            },\r\n            tag: {\r\n                type: String,\r\n                default: 'a'\r\n            },\r\n            exact: Boolean,\r\n            append: Boolean,\r\n            replace: Boolean,\r\n            activeClass: {\r\n                type: String,\r\n                default: 'active'\r\n            },\r\n            exactActiveClass: {\r\n                type: String,\r\n                default: 'active'\r\n            },\r\n            event: {\r\n                type: [String, Array],\r\n                default: 'click'\r\n            },\r\n            disabled: Boolean,\r\n            href: {\r\n                type: String,\r\n                default: '#'\r\n            }\r\n        },\r\n        methods: {\r\n            click(e) {\r\n                if (this.disabled || this._href === '#') {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n\r\n                this.$emit('click', e);\r\n                this.$root.$emit('clicked::link', this);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <ol class=\"breadcrumb\" role=\"navigation\">\r\n        <li v-for=\"item in items2\"\r\n            :class=\"['breadcrumb-item', item.__active ? 'active' : null]\"\r\n            @click=\"onclick(item)\"\r\n            role=\"presentation\"\r\n        >\r\n            <span v-if=\"item.active\" v-html=\"item.text\"></span>\r\n            <b-link v-else :to=\"item.to\" :href=\"item.href || item.link\" v-html=\"item.text\"></b-link>\r\n        </li>\r\n        <slot></slot>\r\n    </ol>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            componentType() {\r\n                return this.to ? 'router-link' : 'a';\r\n            },\r\n            items2() {\r\n                const last = this.items.length > 0 && this.items[this.items.length - 1];\r\n\r\n                return this.items.map(item => {\r\n                    if (typeof item === 'string') {\r\n                        return {text: item, link: '#', active: item === last};\r\n                    }\r\n\r\n                    if (item.active !== true && item.active !== false) {\r\n                        item.__active = item === last;\r\n                    } else {\r\n                        item.__active = item.active;\r\n                    }\r\n\r\n                    return item;\r\n                });\r\n            }\r\n        },\r\n        props: {\r\n            items: {\r\n                type: Array,\r\n                default: () => [],\r\n                required: true\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(item) {\r\n                this.$emit('click', item);\r\n                if (this.$router && this.to) {\r\n                    this.$router.push(this.to);\r\n                }\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <button :class=\"classObject\"\r\n            :is=\"componentType\"\r\n            :to=\"to\"\r\n            :href=\"href\"\r\n            @click=\"onclick\"\r\n            :disabled=\"disabled\"\r\n    >\r\n        <slot></slot>\r\n    </button>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn',\r\n                    this.btnVariant,\r\n                    this.btnSize,\r\n                    this.btnBlock,\r\n                    this.btnDisabled,\r\n                    this.inactive ? 'btn-inactive' : ''\r\n                ];\r\n            },\r\n            componentType() {\r\n                return (this.href || this.to) ? 'b-link' : 'button';\r\n            },\r\n            btnBlock() {\r\n                return this.block ? `btn-block` : '';\r\n            },\r\n            btnVariant() {\r\n                return this.variant ? `btn-${this.variant}` : `btn-secondary`;\r\n            },\r\n            btnSize() {\r\n                return this.size ? `btn-${this.size}` : '';\r\n            },\r\n            btnDisabled() {\r\n                return this.disabled ? 'disabled' : '';\r\n            }\r\n        },\r\n        props: {\r\n            block: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            inactive: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            to: {\r\n                type: [String, Object]\r\n            },\r\n            href: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(e) {\r\n                if (this.disabled) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                } else {\r\n                    this.$emit('click', e);\r\n                }\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\"\r\n         :role=\"toolbar ? 'toolbar' : 'group'\"\r\n         :tabindex=\"isKeyNav ? '0' : null\"\r\n         @focusin.self=\"focusFirst\"\r\n         @keydown.left=\"focusNext($event,true)\"\r\n         @keydown.up=\"focusNext($event,true)\"\r\n         @keydown.right=\"focusNext($event,false)\"\r\n         @keydown.down=\"focusNext($event,false)\"\r\n         @keydown.shift.left=\"focusFirst($event)\"\r\n         @keydown.shift.up=\"focusFirst($event)\"\r\n         @keydown.shift.right=\"focusLast($event)\"\r\n         @keydown.shift.down=\"focusLast($event)\"\r\n    >\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const ITEM_SELECTOR = [\r\n        '.btn:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        '.form-control:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'select:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'input[type=\"checkbox\"]:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'input[type=\"radio\"]:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])'\r\n    ].join(',');\r\n\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'btn-' + (this.toolbar ? 'toolbar' : 'group'),\r\n                    this.vertical ? 'btn-group-vertical' : '',\r\n                    (this.justify && !this.vertical) ? 'justify-content-between' : '',\r\n                    this.size ? ('btn-group-' + this.size) : ''\r\n                ];\r\n            },\r\n            isKeyNav() {\r\n                return this.toolbar && this.toolbarkeyNav;\r\n            }\r\n        },\r\n        props: {\r\n            vertical: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            toolbar: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            justify: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            toobarKeyNav: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            focusNext(e, prev) {\r\n                if (!this.isKeyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length < 1) {\r\n                    return;\r\n                }\r\n                let index = items.indexOf(e.target);\r\n                if (prev && index > 0) {\r\n                    index--;\r\n                } else if (!prev && index < items.length - 1) {\r\n                    index++;\r\n                }\r\n                if (index < 0) {\r\n                    index = 0;\r\n                }\r\n                items[index].focus();\r\n            },\r\n            focusFirst(e) {\r\n                if (!this.isKeyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length > 0) {\r\n                    items[0].focus();\r\n                }\r\n            },\r\n            focusLast(e) {\r\n                if (!this.isKeyNav) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const items = this.getItems();\r\n                if (items.length > 0) {\r\n                    items[items.length - 1].focus();\r\n                }\r\n            },\r\n            getItems() {\r\n                const items = Array.prototype.slice.call(this.$el.querySelectorAll(ITEM_SELECTOR));\r\n                items.forEach(item => {\r\n                    // Ensure tabfocus is -1 on any new elements\r\n                    item.tabIndex = -1;\r\n                });\r\n                return items;\r\n            }\r\n        },\r\n        mounted() {\r\n            if (this.isKeyNav) {\r\n                // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\r\n                this.getItems();\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","const ITEM_SELECTOR = [\r\n    '.dropdown-item:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n    '.dropdown-header:not([style*=\"display: none\"]):not([style*=\"display:none\"])'\r\n].join(',');\r\n\r\nexport default {\r\n    props: {\r\n        split: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        text: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        dropup: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        right: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    created() {\r\n        this.$root.$on('shown::dropdown', el => {\r\n            // To keep one dropdown opened on page\r\n            if (el !== this) {\r\n                this.visible = false;\r\n            }\r\n        });\r\n    },\r\n    watch: {\r\n        visible(state, old) {\r\n            if (state === old) {\r\n                return; // Avoid duplicated emits\r\n            }\r\n\r\n            if (state) {\r\n                this.$root.$emit('shown::dropdown', this);\r\n                /*\r\n                 If this is a touch-enabled device we add extra\r\n                 empty mouseover listeners to the body's immediate children;\r\n                 only needed because of broken event delegation on iOS\r\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\r\n                 */\r\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\r\n                    const children = Array.prototype.slice.call(document.body.children);\r\n                    children.forEach(el => {\r\n                        el.addEventListener('mouseover', this.noop);\r\n                    });\r\n                }\r\n            } else {\r\n                this.$root.$emit('hidden::dropdown', this);\r\n                /*\r\n                 If this is a touch-enabled device we remove the extra\r\n                 empty mouseover listeners we added for iOS support\r\n                 */\r\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\r\n                    const children = Array.prototype.slice.call(document.body.children);\r\n                    children.forEach(el => {\r\n                        el.removeEventListener('mouseover', this.noop);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        noop() {\r\n            // Do nothing event handler (used in visible watch)\r\n        },\r\n        toggle() {\r\n            if (this.disabled) {\r\n                this.visible = false;\r\n                return;\r\n            }\r\n            this.visible = !this.visible;\r\n            if (this.visible) {\r\n                this.$nextTick(function () {\r\n                    // Focus first visible non-disabled item\r\n                    const items = this.getItems();\r\n                    if (items.length > 0) {\r\n                        items[0].focus();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        onTab() {\r\n            if (this.visible) {\r\n                this.visible = false;\r\n            }\r\n        },\r\n        onEsc(e) {\r\n            if (this.visible) {\r\n                this.visible = false;\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.$nextTick(function () {\r\n                    // Return focus to original trigger button\r\n                    let el;\r\n                    if (this.split && this.$refs.toggle) {\r\n                        el = this.$refs.toggle.$el || this.$refs.toggle;\r\n                    } else {\r\n                        el = this.$refs.button.$el || this.$refs.button;\r\n                    }\r\n                    if (el && el.focus) {\r\n                        el.focus();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        focusNext(e, up) {\r\n            if (!this.visible) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            const items = this.getItems();\r\n            if (items.length < 1) {\r\n                return;\r\n            }\r\n            let index = items.indexOf(e.target);\r\n            if (up && index > 0) {\r\n                index--;\r\n            } else if (!up && index < items.length - 1) {\r\n                index++;\r\n            }\r\n            if (index < 0) {\r\n                index = 0;\r\n            }\r\n            items[index].focus();\r\n        },\r\n        getItems() {\r\n            return Array.prototype.slice.call(this.$refs.menu.querySelectorAll(ITEM_SELECTOR));\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :class=\"['btn-group','dropdown', {dropup, show: visible}]\">\r\n\r\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\r\n                  ref=\"button\"\r\n                  :id=\"id ? (id + '__BV_button_') : null\"\r\n                  :aria-expanded=\"visible ? 'true' : 'false'\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"click\"\r\n                  @kedown.space.stop.prevent=\"click\"\r\n                  @kedown.enter.stop.prevent=\"click\"\r\n        >\r\n            <slot name=\"text\">{{text}}</slot>\r\n        </b-button>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             role=\"menu\"\r\n             ref=\"menu\"\r\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n\r\n    export default {\r\n        mixins: [\r\n            clickOut,\r\n            dropdown\r\n        ],\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        computed: {\r\n            dropdownToggle() {\r\n                return this.caret ? 'dropdown-toggle' : '';\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String\r\n            },\r\n            caret: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"classObject\" role=\"group\">\r\n        <slot name=\"left\">\r\n            <div v-if=\"left\" class=\"input-group-addon\" v-html=\"left\"></div>\r\n        </slot>\r\n\r\n        <slot></slot>\r\n\r\n        <slot name=\"right\">\r\n            <div v-if=\"right\" class=\"input-group-addon\" v-html=\"right\"></div>\r\n        </slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'input-group',\r\n                    this.size ? ('input-group-' + this.size) : '',\r\n                    this.state ? ('has-' + this.state) : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            left: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            right: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"input-group-addon\" :id=\"id\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div class=\"input-group-btn\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <div :class=\"['card',cardVariant,cardAlign,cardInverse]\">\r\n        <!-- Card Image Slot-->\r\n        <slot name=\"img\" ref=\"img\">\r\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" class=\"card-img\">\r\n        </slot>\r\n\r\n        <!-- Card Header-->\r\n        <component v-if=\"header || showHeader\" :is=\"headerTag\" class=\"card-header\">\r\n            <slot name=\"header\">\r\n                <div v-html=\"header\"></div>\r\n            </slot>\r\n        </component>\r\n\r\n        <!--Show custom block when no-block prop is set-->\r\n        <template v-if=\"noBlock\">\r\n            <slot></slot>\r\n        </template>\r\n\r\n        <!-- Card Standard Blocks-->\r\n        <div :class=\"blockClass\" v-else>\r\n            <h4 v-if=\"title\" class=\"card-title\" v-html=\"title\"></h4>\r\n            <h6 v-if=\"subTitle\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Card Footer-->\r\n        <component v-if=\"footer || showFooter\" :is=\"footerTag\" class=\"card-footer\">\r\n            <slot name=\"footer\">\r\n                <div v-html=\"footer\"></div>\r\n            </slot>\r\n        </component>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            blockClass() {\r\n                return [\r\n                    'card-block',\r\n                    this.overlay ? 'card-img-overlay' : null\r\n                ];\r\n            },\r\n            cardVariant() {\r\n                return this.variant ? `card-${this.variant}` : null;\r\n            },\r\n            cardInverse() {\r\n                if (this.overlay || this.inverse) {\r\n                    return 'card-inverse';\r\n                }\r\n                // Auto inverse colored cards\r\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\r\n                    this.variant.indexOf('outline') === -1) {\r\n                    return 'card-inverse';\r\n                }\r\n            },\r\n            cardAlign() {\r\n                return this.align ? `text-${this.align}` : null;\r\n            }\r\n        },\r\n        props: {\r\n            align: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inverse: {\r\n                type: Boolean,\r\n                // It should remain null for auto inverse\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n\r\n            // Header\r\n            header: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            showHeader: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            headerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Footer\r\n            footer: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            showFooter: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            footerTag: {\r\n                type: String,\r\n                default: 'div'\r\n            },\r\n\r\n            // Main block\r\n            title: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            subTitle: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            noBlock: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n\r\n            // Image\r\n            img: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            imgAlt: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            overlay: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <div :class=\"['card-' + type]\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            type() {\n                if (this.deck) {\n                    return 'deck';\n                }\n\n                if (this.columns) {\n                    return 'columns';\n                }\n\n                return 'group';\n            }\n        },\n        props: {\n            deck: {\n                type: Boolean,\n                default: false\n            },\n            columns: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\r\n    <div class=\"carousel slide\" @mouseenter=\"pause\" @mouseleave=\"start\" :style=\"{background,height}\">\r\n        <!-- Indicators -->\r\n        <ol class=\"carousel-indicators\" v-show=\"indicators\">\r\n            <li v-for=\"n in slides.length\"\r\n                :class=\"{active:n-1 === index}\"\r\n                @click=\"index=n-1\"\r\n            ></li>\r\n        </ol>\r\n\r\n        <!-- Wrapper for slides -->\r\n        <div class=\"carousel-inner\" role=\"listbox\">\r\n            <slot></slot>\r\n        </div>\r\n\r\n        <!-- Controls -->\r\n        <template v-if=\"controls\">\r\n            <a class=\"carousel-control-prev\" href=\"#\" role=\"button\" data-slide=\"prev\" @click.stop.prevent=\"prev\">\r\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a class=\"carousel-control-next\" href=\"#\" role=\"button\" data-slide=\"next\" @click.stop.prevent=\"next\">\r\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Next</span>\r\n            </a>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const DIRECTION = {\r\n        next: {\r\n            current: 'carousel-item-left',\r\n            next: 'carousel-item-right',\r\n            overlay: 'carousel-item-next'\r\n        },\r\n        prev: {\r\n            current: 'carousel-item-right',\r\n            next: 'carousel-item-left',\r\n            overlay: 'carousel-item-prev'\r\n        }\r\n    };\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                index: 0,\r\n                isSliding: false,\r\n                slides: []\r\n            };\r\n        },\r\n        props: {\r\n            interval: {\r\n                type: Number,\r\n                default: 5000\r\n            },\r\n            indicators: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            controls: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            height: {\r\n                type: String\r\n            },\r\n            background: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            // Previous slide\r\n            prev() {\r\n                if (this.index <= 0) {\r\n                    this.index = this.slides.length - 1;\r\n                } else {\r\n                    this.index--;\r\n                }\r\n            },\r\n\r\n            // Next slide\r\n            next() {\r\n                if (this.index >= this.slides.length - 1) {\r\n                    this.index = 0;\r\n                } else {\r\n                    this.index++;\r\n                }\r\n            },\r\n\r\n            // Pause auto rotation\r\n            pause() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                clearInterval(this._intervalId);\r\n            },\r\n\r\n            // Start auto rotate slides\r\n            start() {\r\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\r\n                    return;\r\n                }\r\n                this._intervalId = setInterval(() => {\r\n                    this.next();\r\n                }, this.interval);\r\n            }\r\n        },\r\n        mounted() {\r\n            // Get all slides\r\n            this.slides = this.$el.querySelectorAll('.carousel-item');\r\n\r\n            // Set first slide as active\r\n            this.slides[0].classList.add('active');\r\n\r\n            // Auto rotate slides\r\n            this.start();\r\n        },\r\n        watch: {\r\n            index(val, oldVal) {\r\n                if (val === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (this.isSliding) {\r\n                    this.index = oldVal;\r\n                    return;\r\n                }\r\n\r\n                // Determine sliding direction\r\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\r\n\r\n                // Rotates\r\n                if (oldVal === 0 && val === this.slides.length - 1) {\r\n                    direction = DIRECTION.prev;\r\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\r\n                    direction = DIRECTION.next;\r\n                }\r\n\r\n                // Determine current and next slides\r\n                const currentSlide = this.slides[oldVal];\r\n                const nextSlide = this.slides[val];\r\n\r\n                if (!currentSlide || !nextSlide) {\r\n                    return;\r\n                }\r\n\r\n                // Start animating\r\n                this.isSliding = true;\r\n\r\n                nextSlide.classList.add(direction.next, direction.overlay);\r\n                currentSlide.classList.add(direction.current);\r\n\r\n                this._carouselAnimation = setTimeout(() => {\r\n                    this.isSliding = false;\r\n                    this.$emit('slide', val);\r\n\r\n                    currentSlide.classList.remove('active');\r\n                    nextSlide.classList.add('active');\r\n\r\n                    currentSlide.classList.remove(direction.current);\r\n                    nextSlide.classList.remove(direction.next, direction.overlay);\r\n                }, 500);\r\n            }\r\n        },\r\n        destroyed() {\r\n            clearTimeout(this._carouselAnimation);\r\n            clearInterval(this._intervalId);\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div class=\"carousel-item\" :style=\"{background,height}\">\r\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\r\n        <div :class=\"contentClasses\">\r\n            <h3 v-if=\"caption\" v-html=\"caption\"></h3>\r\n            <p v-if=\"text\" v-html=\"text\"></p>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            img: {\r\n                type: String\r\n            },\r\n            imgAlt: {\r\n                type: String\r\n            },\r\n            contentVisibleUp: {\r\n                type: String\r\n            },\r\n            caption: {\r\n                type: String\r\n            },\r\n            text: {\r\n                type: String\r\n            },\r\n            background: {\r\n                type: String\r\n            },\r\n            height: {\r\n                type: String\r\n            }\r\n        },\r\n        computed: {\r\n            contentClasses() {\r\n                const classes = {\r\n                    'carousel-caption': Boolean(this.caption)\r\n                };\r\n                if (this.contentVisibleUp) {\r\n                    classes['d-none'] = true;\r\n                    classes[`d-${this.contentVisibleUp}-block`] = true;\r\n                }\r\n                return classes;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <transition\r\n            @enter=\"enter\"\r\n            @after-enter=\"clearHeight\"\r\n            @leave=\"leave\"\r\n            @after-leave=\"clearHeight\"\r\n            name=\"collapse\"\r\n    >\r\n        <div :class=\"classObject\" v-show=\"show\">\r\n            <slot></slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<style scoped>\r\n    .collapse-enter-active, .collapse-leave-active {\r\n        transition: all .35s ease;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .collapse-enter, .collapse-leave-to {\r\n        /*height: 0;*/\r\n    }\r\n</style>\r\n\r\n<script>\r\n    export default {\r\n\r\n        data() {\r\n            return {\r\n                show: false\r\n            };\r\n        },\r\n\r\n        computed: {\r\n            classObject() {\r\n                return {\r\n                    'navbar-collapse': this.isNav,\r\n                    show: this.show\r\n                };\r\n            }\r\n        },\r\n\r\n        props: {\r\n            isNav: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            id: {\r\n                type: String,\r\n                required: true\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            toggle() {\r\n                this.show = !this.show;\r\n            },\r\n            enter(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = '0px';\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = realHeight;\r\n            },\r\n            leave(el) {\r\n                el.style.height = 'auto';\r\n                const realHeight = getComputedStyle(el).height;\r\n                el.style.height = realHeight;\r\n\r\n                /* eslint-disable no-unused-expressions */\r\n                el.offsetHeight; // Force repaint\r\n\r\n                el.style.height = '0px';\r\n            },\r\n            clearHeight(el) {\r\n                el.style.height = null;\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.$root.$on('collapse::toggle', target => {\r\n                if (target !== this.id) {\r\n                    return;\r\n                }\r\n                this.toggle();\r\n            });\r\n        }\r\n    };\r\n\r\n</script>\r\n","/**\r\n * Tries to generate id using uid if no id prop is provided.\r\n * NOTE: this mixin should be used only when `aria` and `for` tags are needed, in other cases.\r\n * it is better to prefer references/refs and events over relying on generated id.\r\n * @see https://github.com/bootstrap-vue/bootstrap-vue/issues/281\r\n *\r\n * Currently is being used in:\r\n *  - dropdown.vue\r\n *  - form-checkbox-vue\r\n *  - form-file.vue\r\n *  - form-input.vue\r\n *  - form-select.vue\r\n */\r\n\r\nconst inBrowser = typeof window !== 'undefined';\r\nconst UNSAFE_UID = (inBrowser && window.UNSAFE_UID === true) || (!inBrowser && process.env.UNSAFE_UID === true);\r\n\r\nexport default {\r\n    computed: {\r\n        _id() {\r\n            if (!UNSAFE_UID || this.id) {\r\n                return this.id;\r\n            }\r\n\r\n            return `__b_${this._uid}__`;\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :class=\"['dropdown','btn-group',{dropup, show: visible}]\">\r\n\r\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\r\n                  ref=\"button\"\r\n                  :id=\"_id\"\r\n                  :aria-haspopup=\"split ? null : 'true'\"\r\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"click\"\r\n        >\r\n            <slot name=\"text\">{{text}}</slot>\r\n        </b-button>\r\n\r\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split',{'btn-link': link}]\"\r\n                  v-if=\"split\"\r\n                  ref=\"toggle\"\r\n                  :aria-haspopup=\"split ? 'true' : null\"\r\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\r\n                  :variant=\"variant\"\r\n                  :size=\"size\"\r\n                  :disabled=\"disabled\"\r\n                  @click.stop.prevent=\"toggle\"\r\n        >\r\n            <span class=\"sr-only\">{{toggleText}}</span>\r\n        </b-button>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             ref=\"menu\"\r\n             role=\"menu\"\r\n             :aria-labelledby=\"split ? null : _id\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n    import generateId from '../mixins/generate-id';\r\n    import bButton from './button.vue';\r\n\r\n    export default {\r\n        mixins: [clickOut, dropdown, generateId],\r\n        components: {bButton},\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        props: {\r\n            toggleText: {\r\n                type: String,\r\n                default: 'Toggle Dropdown'\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            variant: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            link: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            },\r\n            click(e) {\r\n                if (this.disabled) {\r\n                    this.visible = false;\r\n                    return;\r\n                }\r\n\r\n                if (this.split) {\r\n                    this.$emit('click', e);\r\n                    this.$root.$emit('shown::dropdown', this);\r\n                } else {\r\n                    this.toggle();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <b-link :class=\"['dropdown-item',{ disabled }]\"\r\n            :to=\"to\"\r\n            :href=\"href\"\r\n            :disabled=\"disabled\"\r\n            tabindex=\"-1\"\r\n            role=\"menuitem\"\r\n            @click=\"dropdown_click\"\r\n            @click.native=\"dropdown_click\"\r\n    >\r\n        <slot></slot>\r\n    </b-link>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        extends: bLink,\r\n        methods: {\r\n            dropdown_click(e) {\r\n                if (!this.disabled) {\r\n                    this.$root.$emit('shown::dropdown', this);\r\n                }\r\n\r\n                this.click(e);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {}\r\n    };\r\n</script>\r\n","<template>\r\n    <component :is=\"tag\" tabindex=\"-1\" class=\"dropdown-header\">\r\n        <slot></slot>\r\n    </component>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            tag: {\r\n                type: String,\r\n                default: 'h6'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\r\n    <div :class=\"['form-group','row',inputState]\"\r\n        role=\"group\"\r\n        :aria-describedby=\"describedBy\"\r\n    >\r\n        <label v-if=\"label\"\r\n               :for=\"target\"\r\n               :id=\"labelId\"\r\n               :class=\"[labelSrOnly ? 'sr-only' : 'col-form-label',labelLayout,labelAlignClass]\"\r\n               v-html=\"label\"\r\n        ></label>\r\n        <div :class=\"inputLayout\" ref=\"content\">\r\n            <slot></slot>\r\n            <div v-if=\"feedback\"\r\n                 class=\"form-text form-control-feedback\"\r\n                 :id=\"feedbackId\"\r\n                 role=\"alert\"\r\n                 aria-live=\"assertive\"\r\n                 aria-atomic=\"true\"\r\n                 v-html=\"feedback\"\r\n            ></div>\r\n            <small v-if=\"description\"\r\n                   class=\"form-text text-muted\"\r\n                   :id=\"descriptionId\"\r\n                   v-html=\"description\"\r\n            ></small>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                target: null\r\n            };\r\n        },\r\n        computed: {\r\n            labelId() {\r\n                return (this.id && this.label) ? (this.id + '__BV_label_') : null;\r\n            },\r\n            descriptionId() {\r\n                return (this.id && this.description) ? (this.id + '__BV_description_') : null;\r\n            },\r\n            feedbackId() {\r\n                return (this.id && this.feedback) ? (this.id + '__BV_feedback_') : null;\r\n            },\r\n            describedBy() {\r\n                if (this.id && (this.label || this.feedback || this.description)) {\r\n                    return [\r\n                        this.labelId,\r\n                        this.descriptionId,\r\n                        this.feedbackId\r\n                    ].filter(i => i).join(' ');\r\n                }\r\n                return null;\r\n            },\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            },\r\n            labelLayout() {\r\n                if (this.labelSrOnly) {\r\n                    return null;\r\n                }\r\n                return this.horizontal ? ('col-sm-' + this.labelSize) : 'col-12';\r\n            },\r\n            labelAlignClass() {\r\n                if (this.labelSrOnly) {\r\n                    return null;\r\n                }\r\n                return this.labelTextAlign ? `text-${this.labelTextAlign}` : null;\r\n            },\r\n            inputLayout() {\r\n                return this.horizontal ? ('col-sm-' + (12 - this.labelSize)) : 'col-12';\r\n            }\r\n        },\r\n        methods: {\r\n            updateTarget() {\r\n                const content = this.$refs.content;\r\n                if (!content) {\r\n                    return null;\r\n                }\r\n                const input = content.querySelector(this.inputSelector);\r\n                this.target = (input && input.id) ? input.id : null;\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateTarget();\r\n        },\r\n        updated() {\r\n            this.updateTarget();\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            state: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            horizontal: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            labelSize: {\r\n                type: Number,\r\n                default: 3\r\n            },\r\n            labelTextAlign: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            label: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            labelSrOnly: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            description: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            feedback: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            inputSelector: {\r\n                type: String,\r\n                default: 'input,select,textarea,.form-control,.form-control-static,.dropdown,.dropup'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","export default {\r\n    computed: {\r\n        inputClass() {\r\n            return [\r\n                this.size ? `form-control-${this.size}` : null,\r\n                this.state ? `form-control-${this.state}` : null\r\n            ];\r\n        },\r\n        custom() {\r\n            return !this.plain;\r\n        }\r\n    },\r\n    props: {\r\n        name: {\r\n            type: String\r\n        },\r\n        disabled: {\r\n            type: Boolean\r\n        },\r\n        plain: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        state: {\r\n            type: String\r\n        },\r\n        size: {\r\n            type: String\r\n        },\r\n        id: {\r\n            type: String\r\n        }\r\n    }\r\n};\r\n\r\n","export default {\r\n    computed: {\r\n        checkboxClass() {\r\n            return {\r\n                'custom-control': this.custom,\r\n                'form-check-inline': this.inline\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\n","<template>\r\n    <label :class=\"[inputClass,checkboxClass,custom?'custom-checkbox':null]\">\r\n        <input\r\n                type=\"checkbox\"\r\n                :id=\"_id\"\r\n                :name=\"name\"\r\n                :value=\"value\"\r\n                :disabled=\"disabled\"\r\n\r\n                :class=\"[custom?'custom-control-input':null]\"\r\n                :checked=\"checked===value\"\r\n                @change=\"$emit('change',$event.target.checked?value:uncheckedValue)\"\r\n        >\r\n        <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\r\n        <span :class=\"[custom?'custom-control-description':null]\"><slot></slot></span>\r\n    </label>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import formCheckBoxMixin from '../mixins/form-checkbox';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, formCheckBoxMixin, generateId],\r\n        model: {\r\n            prop: 'checked',\r\n            event: 'change'\r\n        },\r\n        props: {\r\n            value: {\r\n                default: true\r\n            },\r\n            uncheckedValue: {\r\n                default: false\r\n            },\r\n            checked: {\r\n                default: true\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","export default {\r\n    computed: {\r\n        formOptions() {\r\n            let options = this.options || {};\r\n\r\n            if (Array.isArray(options)) {\r\n                // Normalize flat arrays to object Array\r\n                options = options.map(option => {\r\n                    if (typeof option === 'object') {\r\n                        return {\r\n                            value: option[this.valueField],\r\n                            text: option[this.textField],\r\n                            disabled: option.disabled || false\r\n                        };\r\n                    }\r\n\r\n                    return {text: String(option), value: option || {}};\r\n                });\r\n            } else {\r\n                // Normalize Objects keys to Array\r\n                options = Object.keys(options).map(value => {\r\n                    let option = options[value] || {};\r\n\r\n                    // Resolve text\r\n                    if (typeof option !== 'object') {\r\n                        option = {text: String(option)};\r\n                    }\r\n\r\n                    // Resolve value (uses key as value if not provided)\r\n                    option.value = option[this.valueField] || value;\r\n\r\n                    return option;\r\n                });\r\n            }\r\n\r\n            return options;\r\n        },\r\n        selectedValue() {\r\n            const formOptions = this.formOptions;\r\n            for (let i = 0; i < formOptions.length; i++) {\r\n                if (formOptions[i].value === this.localValue) {\r\n                    if (this.returnObject) {\r\n                        return formOptions[i];\r\n                    }\r\n                    return formOptions[i].value;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    props: {\r\n        valueField: {\r\n            type: [String],\r\n            default: 'value'\r\n        },\r\n        textField: {\r\n            type: [String],\r\n            default: 'text'\r\n        }\r\n    },\r\n    watch: {\r\n        localValue(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.$emit('input', this.selectedValue);\r\n        },\r\n        value(value, old_value) {\r\n            if (value === old_value) {\r\n                return;\r\n            }\r\n            this.localValue = value;\r\n        }\r\n    }\r\n};\r\n","<template>\r\n    <div :class=\"[inputClass,this.stacked?'custom-controls-stacked':'']\">\r\n        <label :class=\"[checkboxClass,custom?'custom-radio':null]\" v-for=\"option in formOptions\">\r\n            <input\r\n                    v-model=\"localValue\"\r\n                    :class=\"custom?'custom-control-input':null\"\r\n                    type=\"radio\"\r\n                    :value=\"option.value\"\r\n                    :name=\"option.name\"\r\n                    :id=\"option.id\"\r\n                    :disabled=\"option.disabled\"\r\n                    ref=\"inputs\"\r\n            >\r\n\r\n            <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\r\n\r\n            <span :class=\"custom?'custom-control-description':null\" v-html=\"option.text\"></span>\r\n\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import formOptionsMixin from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n    import formCheckBoxMixin from '../mixins/form-checkbox';\r\n\r\n    export default {\r\n        mixins: [formMixin, formCheckBoxMixin, formOptionsMixin],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        computed: {\r\n            inputState() {\r\n                return this.state ? `has-${this.state}` : '';\r\n            }\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                default: null,\r\n                required: true\r\n            },\r\n            stacked: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <p :id=\"_id\"\r\n       :class=\"['form-control-static',inputClass]\"\r\n       v-html=\"staticValue\"\r\n    >\r\n        <slot></slot>\r\n    </p>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        computed: {\r\n            staticValue() {\r\n                return this.formatter ? this.formatter(this.value) : this.value;\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                default: null\r\n            },\r\n            formatter: {\r\n                type: Function\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <input v-if=\"!static\"\r\n           :type=\"type\"\r\n           :value=\"value\"\r\n           :name=\"name\"\r\n           :id=\"_id\"\r\n           :disabled=\"disabled\"\r\n           ref=\"input\"\r\n\r\n           :is=\"textarea?'textarea':'input'\"\r\n           :class=\"['form-control',inputClass]\"\r\n           :rows=\"rows || rowsCount\"\r\n\r\n           :placeholder=\"placeholder\"\r\n\r\n           @input=\"onInput($event.target.value)\"\r\n           @change=\"onChange($event.target.value)\"\r\n           @keyup=\"onKeyUp($event)\"\r\n           @focus=\"$emit('focus')\"\r\n           @blur=\"$emit('blur')\"\r\n    />\r\n    <b-form-input-static v-else\r\n                         :id=\"_id\"\r\n                         :value=\"value\"\r\n                         :formatter=\"formatter\"\r\n    ></b-form-input-static>\r\n</template>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n    import bFormInputStatic from './form-input-static.vue';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        components: {bFormInputStatic},\r\n        computed: {\r\n            rowsCount() {\r\n                return (this.value || '').toString().split('\\n').length;\r\n            }\r\n        },\r\n        methods: {\r\n            format(value) {\r\n                if (this.formatter) {\r\n                    const formattedValue = this.formatter(value);\r\n                    if (formattedValue !== value) {\r\n                        value = formattedValue;\r\n                        this.$refs.input.value = formattedValue;\r\n                    }\r\n                }\r\n                return value;\r\n            },\r\n            onInput(value) {\r\n                if (!this.lazyFormatter) {\r\n                    value = this.format(value);\r\n                }\r\n                this.$emit('input', value);\r\n            },\r\n            onChange(value) {\r\n                value = this.format(value);\r\n                this.$emit('input', value);\r\n                this.$emit('change', value);\r\n            },\r\n            onKeyUp(e) {\r\n                this.$emit('keyup', e);\r\n            }\r\n        },\r\n        props: {\r\n            value: {\r\n                default: null\r\n            },\r\n            type: {\r\n                type: String,\r\n                default: 'text'\r\n            },\r\n            static: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            rows: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            textarea: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            formatter: {\r\n                type: Function\r\n            },\r\n            lazyFormatter: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <label :class=\"[custom?'custom-file':null,inputClass]\"\r\n           @dragover.stop.prevent=\"dragover\"\r\n    >\r\n\r\n        <!-- Drop Here Target -->\r\n        <span class=\"drop-here\"\r\n              v-if=\"dragging\"\r\n              @dragover.stop.prevent=\"dragover\"\r\n              @drop.stop.prevent=\"drop\"\r\n              @dragleave.stop.prevent=\"dragging=false\"\r\n              :data-drop=\"dropLabel\"\r\n        ></span>\r\n\r\n        <!-- Real Form input -->\r\n        <input type=\"file\"\r\n               :name=\"name\"\r\n               :id=\"_id\"\r\n               :disabled=\"disabled\"\r\n               ref=\"input\"\r\n               :accept=\"accept\"\r\n\r\n               class=\"custom-file-input\"\r\n               @change=\"onFileChange\"\r\n               :multiple=\"multiple\"\r\n               :webkitdirectory=\"directory\"\r\n        >\r\n\r\n        <!-- Overlay Labels -->\r\n        <span :class=\"['custom-file-control',dragging?'dragging':null,inputClass]\"\r\n              :data-choose=\"computedChooseLabel\"\r\n              :data-selected=\"selectedLabel\"\r\n              v-if=\"custom\"\r\n        ></span>\r\n\r\n    </label>\r\n</template>\r\n\r\n<style>\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control {\r\n        overflow: hidden;\r\n    }\r\n\r\n    .custom-file-control.dragging {\r\n        overflow: hidden;\r\n        filter: blur(3px);\r\n    }\r\n\r\n    .custom-file-control::after {\r\n        content: attr(data-selected);\r\n    }\r\n\r\n    .custom-file-control::before {\r\n        content: attr(data-choose);\r\n    }\r\n\r\n    .custom-file .drop-here {\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        background-color: rgba(0, 0, 0, .5);\r\n        border-radius: 3px;\r\n        z-index: 99999;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .custom-file .drop-here::before {\r\n        color: white;\r\n        content: attr(data-drop);\r\n    }\r\n\r\n</style>\r\n\r\n<script>\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, generateId],\r\n        data() {\r\n            return {\r\n                selectedFile: null,\r\n                dragging: false\r\n            };\r\n        },\r\n        computed: {\r\n            selectedLabel() {\r\n                if (!this.selectedFile || this.selectedFile.length === 0) {\r\n                    return this.placeholder || 'No file chosen';\r\n                }\r\n\r\n                if (this.multiple) {\r\n                    if (this.selectedFile.length === 1) {\r\n                        return this.selectedFile[0].name;\r\n                    }\r\n\r\n                    return this.selectedFormat\r\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\r\n                        .replace(':count', this.selectedFile.length);\r\n                }\r\n\r\n                return this.selectedFile.name;\r\n            },\r\n            computedChooseLabel() {\r\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\r\n            }\r\n        },\r\n        watch: {\r\n            selectedFile(newVal, oldVal) {\r\n                if (newVal === oldVal) {\r\n                    return;\r\n                }\r\n\r\n                if (!newVal && this.multiple) {\r\n                    this.$emit('input', []);\r\n                } else {\r\n                    this.$emit('input', newVal);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            onFileChange(e) {\r\n                // Always emit original event\r\n                this.$emit('change', e);\r\n\r\n                // Check if special `items` prop is available on event (drop mode)\r\n                // Can be disabled by setting no-traverse\r\n                const items = e.dataTransfer && e.dataTransfer.items;\r\n                if (items && !this.noTraverse) {\r\n                    const queue = [];\r\n                    for (let i = 0; i < items.length; i++) {\r\n                        const item = items[i].webkitGetAsEntry();\r\n                        if (item) {\r\n                            queue.push(this.traverseFileTree(item));\r\n                        }\r\n                    }\r\n                    Promise.all(queue).then(filesArr => {\r\n                        this.setFiles(Array.prototype.concat.apply([], filesArr));\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                // Normal handling\r\n                this.setFiles(e.target.files || e.dataTransfer.files);\r\n            },\r\n            setFiles(files) {\r\n                if (!files) {\r\n                    this.selectedFile = null;\r\n                    return;\r\n                }\r\n\r\n                if (!this.multiple) {\r\n                    this.selectedFile = files[0];\r\n                    return;\r\n                }\r\n\r\n                // Convert files to array\r\n                const filesArray = [];\r\n                for (let i = 0; i < files.length; i++) {\r\n                    if (files[i].type.match(this.accept)) {\r\n                        filesArray.push(files[i]);\r\n                    }\r\n                }\r\n\r\n                this.selectedFile = filesArray;\r\n            },\r\n            dragover(e) {\r\n                if (this.noDrop) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = true;\r\n                e.dataTransfer.dropEffect = 'copy';\r\n            },\r\n            drop(e) {\r\n                if (this.noDrop) {\r\n                    return;\r\n                }\r\n\r\n                this.dragging = false;\r\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n                    this.onFileChange(e);\r\n                }\r\n            },\r\n            traverseFileTree(item, path) {\r\n                // Based on http://stackoverflow.com/questions/3590058\r\n                return new Promise(resolve => {\r\n                    path = path || '';\r\n                    if (item.isFile) {\r\n                        // Get file\r\n                        item.file(file => {\r\n                            file.$path = path; // Inject $path to file obj\r\n                            resolve(file);\r\n                        });\r\n                    } else if (item.isDirectory) {\r\n                        // Get folder contents\r\n                        item.createReader().readEntries(entries => {\r\n                            const queue = [];\r\n                            for (let i = 0; i < entries.length; i++) {\r\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\r\n                            }\r\n                            Promise.all(queue).then(filesArr => {\r\n                                resolve(Array.prototype.concat.apply([], filesArr));\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        props: {\r\n            accept: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            placeholder: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            chooseLabel: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            multiple: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            directory: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            noTraverse: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            selectedFormat: {\r\n                type: String,\r\n                default: ':count Files'\r\n            },\r\n            noDrop: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            dropLabel: {\r\n                type: String,\r\n                default: 'Drop files here'\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <select :class=\"[inputClass,custom?'custom-select':null]\"\r\n            :name=\"name\"\r\n            :id=\"_id\"\r\n            v-model=\"localValue\"\r\n            :disabled=\"disabled\"\r\n            ref=\"input\"\r\n    >\r\n        <option v-for=\"option in formOptions\"\r\n                :value=\"option.value\"\r\n                v-html=\"option.text\"\r\n                :disabled=\"option.disabled\"\r\n        ></option>\r\n    </select>\r\n</template>\r\n\r\n<script>\r\n    import formOptions from '../mixins/form-options';\r\n    import formMixin from '../mixins/form';\r\n    import generateId from '../mixins/generate-id';\r\n\r\n    export default {\r\n        mixins: [formMixin, formOptions, generateId],\r\n        data() {\r\n            return {\r\n                localValue: this.value\r\n            };\r\n        },\r\n        props: {\r\n            value: {},\r\n            options: {\r\n                type: [Array, Object],\r\n                required: true\r\n            },\r\n            returnObject: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\r\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\r\n            <h1 v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\r\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\r\n            <slot></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        computed: {},\r\n        props: {\r\n            fluid: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            containerFluid: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            header: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            lead: {\r\n                type: String,\r\n                default: null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\" :class=\"classObject\" ref=\"item\" :to=\"to\" :href=\"href\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    const actionTags = ['a', 'router-link', 'button', 'b-link'];\n\n    export default {\n        components: {bLink},\n        computed: {\n            classObject() {\n                return [\n                    'list-group-item',\n                    this.listState,\n                    this.active ? 'active' : null,\n                    this.disabled ? 'disabled' : null,\n                    this.isAction ? 'list-group-item-action' : null\n                ];\n            },\n            isAction() {\n                if (this.action === false) {\n                    return false;\n                }\n                return this.action || this.to || this.href || actionTags.indexOf(this.tag) !== -1;\n            },\n            listState() {\n                return this.variant ? `list-group-item-${this.variant}` : null;\n            },\n            myTag() {\n                if (this.tag) {\n                    return this.tag;\n                }\n                return (this.to || this.href) ? 'b-link' : 'div';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: null\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            action: {\n                type: Boolean,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            to: {\n                type: String,\n                default: null\n            },\n            href: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\r\n    <div>\r\n        <transition-group enter-class=\"hidden\"\r\n                          enter-to-class=\"\"\r\n                          enter-active-class=\"\"\r\n                          leave-class=\"show\"\r\n                          leave-active-class=\"\"\r\n                          leave-to-class=\"hidden\"\r\n        >\r\n            <div key=\"modal\" :id=\"id\"\r\n                 v-show=\"is_visible\"\r\n                 :class=\"['modal',{fade: fade, show: is_visible}]\"\r\n                 role=\"dialog\"\r\n                 @click=\"onClickOut($event)\"\r\n                 @keyup.esc=\"onEsc($event)\"\r\n            >\r\n\r\n                <div :class=\"['modal-dialog','modal-'+size]\">\r\n                    <div class=\"modal-content\"\r\n                         tabindex=\"-1\"\r\n                         role=\"document\"\r\n                         ref=\"content\"\r\n                         :aria-labelledby=\"(hideHeader || !id) ? null : (id + '_modal_title')\"\r\n                         :aria-describedby=\"id ? (id + '_modal_body') : null\"\r\n                         @click.stop\r\n                    >\r\n\r\n                        <header class=\"modal-header\" ref=\"header\" v-if=\"!hideHeader\">\r\n                            <slot name=\"modal-header\">\r\n                                <h5 class=\"modal-title\" :id=\"id ? (id + '_modal_title') : null\">\r\n                                    <slot name=\"modal-title\">{{title}}</slot>\r\n                                </h5>\r\n                                <button type=\"button\"\r\n                                        v-if=\"!hideHeaderClose\"\r\n                                        class=\"close\"\r\n                                        :aria-label=\"closeTitle\"\r\n                                        @click=\"hide\"\r\n                                >\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </slot>\r\n                        </header>\r\n\r\n                        <div class=\"modal-body\" ref=\"body\" :id=\"id ? (id + '_modal_body') : null\">\r\n                            <slot></slot>\r\n                        </div>\r\n\r\n                        <footer class=\"modal-footer\" ref=\"footer\" v-if=\"!hideFooter\">\r\n                            <slot name=\"modal-footer\">\r\n                                <b-btn variant=\"secondary\" @click=\"hide(false)\">{{closeTitle}}</b-btn>\r\n                                <b-btn variant=\"primary\" @click=\"hide(true)\">{{okTitle}}</b-btn>\r\n                            </slot>\r\n                        </footer>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div key=\"modal-backdrop\"\r\n                 :class=\"['modal-backdrop',{fade: fade, show: is_visible}]\"\r\n                 v-if=\"is_visible\"\r\n            ></div>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n    .hidden {\r\n        opacity: 0 !important;\r\n    }\r\n\r\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style */\r\n    .modal {\r\n        display: block;\r\n    }\r\n</style>\r\n\r\n<script>\r\n    import bBtn from './button.vue';\r\n\r\n    const FOCUS_SELECTOR = [\r\n        'button:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'input:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'select:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'textarea:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        'a:not([disabled]):not(.disabled):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\r\n        '[tabindex]:not([disabled]):not(.disabled):not([style*=\"display: none\"]):not([style*=\"display:none\"])'\r\n    ].join(',');\r\n\r\n    export default {\r\n        components: {bBtn},\r\n        data() {\r\n            return {\r\n                is_visible: false,\r\n                return_focus: this.returnFocus || null\r\n            };\r\n        },\r\n        model: {\r\n            prop: 'visible',\r\n            event: 'change'\r\n        },\r\n        computed: {\r\n            body() {\r\n                if (typeof document !== 'undefined') {\r\n                    return document.querySelector('body');\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            visible(new_val, old_val) {\r\n                if (new_val === old_val) {\r\n                    return;\r\n                }\r\n\r\n                if (new_val) {\r\n                    this.show();\r\n                } else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: 'md'\r\n            },\r\n            fade: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            closeTitle: {\r\n                type: String,\r\n                default: 'Close'\r\n            },\r\n            okTitle: {\r\n                type: String,\r\n                default: 'OK'\r\n            },\r\n            closeOnBackdrop: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            closeOnEsc: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            hideHeader: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideFooter: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hideHeaderClose: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            returnFocus: {\r\n                default: null\r\n            }\r\n        },\r\n        methods: {\r\n            show() {\r\n                if (this.is_visible) {\r\n                    return;\r\n                }\r\n                this.is_visible = true;\r\n                this.$root.$emit('shown::modal', this.id);\r\n                this.body.classList.add('modal-open');\r\n                this.$emit('shown');\r\n                this.$emit('change', true);\r\n                if (typeof document !== 'undefined') {\r\n                    // Guard against infinite focus loop\r\n                    document.removeEventListener('focusin', this.enforceFocus, false);\r\n                    // Handle constrained focus\r\n                    document.addEventListener('focusin', this.enforceFocus, false);\r\n                }\r\n                this.$nextTick(function () {\r\n                    // Make sure DOM is updated before focusing\r\n                    this.focusFirst();\r\n                });\r\n            },\r\n            hide(isOK) {\r\n                if (!this.is_visible) {\r\n                    return;\r\n                }\r\n\r\n                // Create event object\r\n                let canceled = false;\r\n                const e = {\r\n                    isOK,\r\n                    cancel() {\r\n                        canceled = true;\r\n                    }\r\n                };\r\n\r\n                // Emit events\r\n                this.$emit('change', false);\r\n                this.$emit('hidden', e);\r\n\r\n                if (isOK === true) {\r\n                    this.$emit('ok', e);\r\n                } else if (isOK === false) {\r\n                    this.$emit('cancel', e);\r\n                }\r\n\r\n                // Hide if not canceled\r\n                if (!canceled) {\r\n                    if (typeof document !== 'undefined') {\r\n                        // Remove focus handler\r\n                        document.removeEventListener('focusin', this.enforceFocus, false);\r\n                        // Return focus to original button/trigger element if provided\r\n                        this.returnFocusTo();\r\n                    }\r\n                    this.is_visible = false;\r\n                    this.$root.$emit('hidden::modal', this.id);\r\n                    this.body.classList.remove('modal-open');\r\n                }\r\n            },\r\n            onClickOut() {\r\n                // If backdrop clicked, hide modal\r\n                if (this.closeOnBackdrop) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            onEsc() {\r\n                // If ESC pressed, hide modal\r\n                if (this.is_visible && this.closeOnEsc) {\r\n                    this.hide();\r\n                }\r\n            },\r\n            focusFirst() {\r\n                // Focus the modal's first focusable item, searching footer, then body, then header, else the modal\r\n                let el;\r\n                if (this.$refs.footer) {\r\n                    el = this.$refs.footer.querySelector(FOCUS_SELECTOR);\r\n                }\r\n                if (!el && this.$refs.body) {\r\n                    el = this.$refs.body.querySelector(FOCUS_SELECTOR);\r\n                }\r\n                if (!el && this.$refs.header) {\r\n                    el = this.$refs.header.querySelector(FOCUS_SELECTOR);\r\n                }\r\n                if (!el) {\r\n                    el = this.$refs.content;\r\n                }\r\n                el.focus();\r\n            },\r\n            returnFocusTo() {\r\n                if (this.return_focus) {\r\n                    const el = (typeof this.return_focus === 'string') ?\r\n                        document.querySelector(this.returnFocus) :\r\n                        this.return_focus;\r\n\r\n                    if (el && el.$el && typeof el.$el.focus === 'function') {\r\n                        el.$el.focus();\r\n                    } else if (el && typeof el.focus === 'function') {\r\n                        el.focus();\r\n                    }\r\n                }\r\n            },\r\n            enforceFocus(e) {\r\n                // If focus leaves modal, bring it back\r\n                // Event Listener bound on document\r\n                if (this.is_visible &&\r\n                    document !== e.target &&\r\n                    this.$refs.content &&\r\n                    this.$refs.content !== e.target &&\r\n                    !this.$refs.content.contains(e.target)) {\r\n                    this.$refs.content.focus();\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            this.$root.$on('show::modal', (id, triggerEl) => {\r\n                if (id === this.id) {\r\n                    this.return_focus = triggerEl || this.return_focus || this.returnFocus || null;\r\n                    this.show();\r\n                }\r\n            });\r\n\r\n            this.$root.$on('hide::modal', id => {\r\n                if (id === this.id) {\r\n                    this.hide();\r\n                }\r\n            });\r\n        },\r\n        mounted() {\r\n            if (this.visible === true) {\r\n                this.show();\r\n            }\r\n        },\r\n        destroyed() {\r\n            // Make sure event listener is rmoved\r\n            if (typeof document !== 'undefined') {\r\n                document.removeEventListener('focusin', this.enforceFocus, false);\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <component :is=\"type\" :class=\"classObject\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return {\n                nav: true,\n                'navbar-nav': this.isNavBar,\n                'nav-tabs': this.tabs,\n                'nav-pills': this.pills,\n                'flex-column': this.vertical,\n                'nav-fill': this.fill\n            };\n        }\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'ul'\n        },\n        fill: {\n            type: Boolean,\n            default: false\n        },\n        tabs: {\n            type: Boolean,\n            default: false\n        },\n        pills: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        isNavBar: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\r\n    <li class=\"nav-item\" @click=\"onclick\">\r\n        <b-link :class=\"classObject\"\r\n                :to=\"to\"\r\n                :href=\"href\"\r\n                :exact=\"exact\"\r\n                :disabled=\"disabled\"\r\n        >\r\n            <slot></slot>\r\n        </b-link>\r\n    </li>\r\n</template>\r\n\r\n<script>\r\n    import bLink from './link.vue';\r\n\r\n    export default {\r\n        components: {bLink},\r\n        computed: {\r\n            classObject() {\r\n                return [\r\n                    'nav-link',\r\n                    this.active ? 'active' : '',\r\n                    this.disabled ? 'disabled' : ''\r\n                ];\r\n            }\r\n        },\r\n        props: {\r\n            active: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            to: {\r\n                type: [String, Object]\r\n            },\r\n            href: {\r\n                type: String\r\n            },\r\n            exact: {\r\n                type: Boolean\r\n            }\r\n        },\r\n        methods: {\r\n            onclick(e) {\r\n                // Hide all drop-downs including navbar-toggle\r\n                this.$root.$emit('shown::dropdown', this);\r\n                this.$emit('click', e);\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\r\n    <li :class=\"['nav-item','dropdown', {dropup, show: visible}]\">\r\n\r\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\r\n           href=\"#\"\r\n           ref=\"button\"\r\n           aria-haspopup=\"true\"\r\n           :aria-expanded=\"visible\"\r\n           :disabled=\"disabled\"\r\n           @click.stop.prevent=\"toggle($event)\"\r\n           @keydown.enter.stop.prevent=\"toggle($event)\"\r\n           @keydown.space.stop.prevent=\"toggle($event)\"\r\n        >\r\n            <slot name=\"text\"><span v-html=\"text\"></span></slot>\r\n        </a>\r\n\r\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\r\n             role=\"menu\"\r\n             ref=\"menu\"\r\n             :aria-labelledby=\"'b_dropdown_button_' + _uid\"\r\n             @keyup.esc=\"onEsc\"\r\n             @keydown.tab=\"onTab\"\r\n             @keydown.up=\"focusNext($event,true)\"\r\n             @keydown.down=\"focusNext($event,false)\"\r\n        >\r\n            <slot></slot>\r\n        </div>\r\n\r\n    </li>\r\n</template>\r\n\r\n<script>\r\n    import clickOut from '../mixins/clickout';\r\n    import dropdown from '../mixins/dropdown';\r\n\r\n    export default {\r\n        mixins: [\r\n            clickOut,\r\n            dropdown\r\n        ],\r\n        data() {\r\n            return {\r\n                visible: false\r\n            };\r\n        },\r\n        computed: {\r\n            dropdownToggle() {\r\n                return this.caret ? 'dropdown-toggle' : '';\r\n            }\r\n        },\r\n        props: {\r\n            caret: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        methods: {\r\n            clickOutListener() {\r\n                this.visible = false;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n","<template>\n    <button :class=\"classObject\"\n            type=\"button\"\n            :aria-label=\"label\"\n            @click=\"onclick\"\n    >\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return [\n                'navbar-toggler',\n                'navbar-toggler-' + this.position\n            ];\n        }\n    },\n\n    props: {\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n        position: {\n            type: String,\n            default: 'right'\n        },\n        target: {\n            required: true\n        }\n    },\n\n    methods: {\n        onclick() {\n            const target = this.target;\n            if (target.toggle) {\n                target.toggle();\n            }\n            this.$root.$emit('collapse::toggle', this.target);\n        }\n    }\n};\n</script>\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? `navbar-toggleable-${this.toggleBreakpoint}` : null\n                ];\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: 'sm'\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: String\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"btn-group pagination\" role=\"group\" aria-label=\"Pagination\">\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize]\"\n                :disabled=\"currentPage == 1 \"\n                @click.prevent=\"(currentPage == 1) ? _return : currentPage--\">\n            <span aria-hidden=\"true\">&laquo;</span>\n        </button>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize,currentPage === 1 ?  'active' : '']\"\n                @click.prevent=\"currentPage = 1\"\n                v-show=\"showPrev\">1\n        </button>\n\n        <span :class=\"['btn','btn-'+secondaryVariant,btnSize]\" v-show=\"showPrev\">...</span>\n\n        <button type=\"button\"\n                :class=\"['btn',\n                btnSize,\n                btnVariant(index),\n                index + diff === currentPage ? 'active' : '',\n                index + diff !== currentPage ? 'hidden-xs-down' : '']\"\n                v-for=\"_,index in pageLinks\"\n                @click.prevent=\"currentPage = index + diff\">{{index + diff}}\n        </button>\n\n        <span :class=\"['btn','btn-'+secondaryVariant,btnSize]\" v-show=\"showNext\">...</span>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize,numberOfPages === currentPage ? 'active' : '']\"\n                v-show=\"showNext\"\n                @click.prevent=\"currentPage = numberOfPages\">{{numberOfPages}}\n        </button>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize]\"\n                :disabled=\"currentPage == numberOfPages\"\n                @click.prevent=\"(currentPage == numberOfPages) ? _return : currentPage++\">\n            <span aria-hidden=\"true\">&raquo;</span>\n        </button>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                diff: 1,\n                showPrev: false,\n                showNext: false,\n                currentPage: this.value\n            };\n        },\n        computed: {\n            numberOfPages() {\n                const result = Math.ceil(this.totalRows / this.perPage);\n                return (result < 1) ? 1 : result;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            pageLinks() {\n                if (this.currentPage > this.numberOfPages) {\n                    this.currentPage = 1;\n                }\n\n                // Defaults\n                this.diff = 1;\n                this.showPrev = false;\n                this.showNext = false;\n\n                // If less pages than limit just show this pages\n                if (this.numberOfPages <= this.limit) {\n                    return this.numberOfPages;\n                }\n\n                // If at the beginning of the list\n                if (this.currentPage <= this.limit - 2) {\n                    this.diff = 1;\n                    this.showNext = true;\n                    return this.limit - 2;\n                }\n\n                // If at the end of the list\n                if (this.currentPage > this.numberOfPages - this.limit + 2) {\n                    this.diff = this.numberOfPages - this.limit + 3;\n                    this.showPrev = true;\n                    return this.limit - 2;\n                }\n\n                // Else we are somewhere in the middle\n                this.diff = this.currentPage - 1;\n                this.showPrev = this.currentPage >= this.limit;\n                this.showNext = this.currentPage <= this.numberOfPages - this.limit + 1;\n                return this.limit;\n            }\n        },\n        methods: {\n            btnVariant(index) {\n                return (index + this.diff === this.currentPage) ? `btn-${this.variant}` : `btn-${this.secondaryVariant}`;\n            },\n            _return() {\n\n            }\n        },\n        watch: {\n            currentPage(newPage, oldPage) {\n                if (newPage === oldPage) {\n                    return;\n                }\n\n                this.$emit('input', newPage);\n            },\n            value(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    this.currentPage = newValue;\n                }\n            }\n        },\n        props: {\n            value: {\n                type: Number,\n                default: 1\n            },\n            limit: {\n                type: Number,\n                default: 3\n            },\n            perPage: {\n                type: Number,\n                default: 20\n            },\n            totalRows: {\n                type: Number,\n                default: 20\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            variant: {\n                type: String,\n                default: 'primary'\n            },\n            secondaryVariant: {\n                type: String,\n                default: 'secondary'\n            }\n        }\n    };\n\n</script>\n","<template>\r\n    <div>\r\n        <span ref=\"trigger\"><slot></slot></span>\r\n\r\n        <div tabindex=\"-1\"\r\n             class=\"popover fade\"\r\n             :class=\"[classState ? 'show' : '', popoverAlignment]\"\r\n             ref=\"popover\"\r\n             @focus=\"$emit('focus')\"\r\n             @blur=\"$emit('blur')\"\r\n             :style=\"popoverStyle\"\r\n        >\r\n            <div class=\"popover-arrow\"></div>\r\n            <h3 class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\r\n            <div class=\"popover-content\">\r\n                <div class=\"popover-content-wrapper\">\r\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Tether from 'tether';\r\n\r\n    // Controls which events are mapped for each named trigger, and the expected popover behavior for each.\r\n    const TRIGGER_LISTENERS = {\r\n        click: {click: 'toggle'},\r\n        hover: {mouseenter: 'show', mouseleave: 'hide'},\r\n        focus: {focus: 'show', blur: 'hide'}\r\n    };\r\n\r\n    const PLACEMENT_PARAMS = {\r\n        top: 'bottom center',\r\n        bottom: 'top center',\r\n        left: 'middle right',\r\n        right: 'middle left'\r\n    };\r\n\r\n    const TETHER_CLASS_PREFIX = 'bs-tether';\r\n\r\n    const TETHER_CLASSES = {\r\n        element: false,\r\n        enabled: false\r\n    };\r\n\r\n    const TRANSITION_DURATION = 150;\r\n\r\n    export default {\r\n        props: {\r\n            constraints: {\r\n                type: Array,\r\n                default() {\r\n                    return [];\r\n                }\r\n            },\r\n            content: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            debounce: {\r\n                type: [Number],\r\n                default: 300,\r\n                validator(value) {\r\n                    return value >= 0;\r\n                }\r\n            },\r\n            delay: {\r\n                type: [Number, Object],\r\n                default: 0,\r\n                validator(value) {\r\n                    if (typeof value === 'number') {\r\n                        return value >= 0;\r\n                    } else if (value !== null && typeof value === 'object') {\r\n                        return typeof value.show === 'number' &&\r\n                            typeof value.hide === 'number' &&\r\n                            value.show >= 0 &&\r\n                            value.hide >= 0;\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            },\r\n            offset: {\r\n                type: String,\r\n                default: '0 0',\r\n                validator(value) {\r\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n                }\r\n            },\r\n            placement: {\r\n                type: String,\r\n                default: 'top',\r\n                validator(value) {\r\n                    return Object.keys(PLACEMENT_PARAMS).indexOf(value) !== -1;\r\n                }\r\n            },\r\n            popoverStyle: {\r\n                type: Object,\r\n                default: null\r\n            },\r\n            show: {\r\n                type: Boolean,\r\n                default: null\r\n            },\r\n            targetOffset: {\r\n                type: String,\r\n                default: '0 0',\r\n                validator(value) {\r\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\r\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\r\n                }\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            triggers: {\r\n                type: [Boolean, String, Array],\r\n                default: () => ['click', 'focus'],\r\n                validator(value) {\r\n                    // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\r\n                    if (value === false || value === '') {\r\n                        return true;\r\n                    } else if (typeof value === 'string') {\r\n                        return Object.keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\r\n                    } else if (Array.isArray(value)) {\r\n                        const keys = Object.keys(TRIGGER_LISTENERS);\r\n                        value.forEach(item => {\r\n                            if (keys.indexOf(item) === -1) {\r\n                                return false;\r\n                            }\r\n                        });\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                triggerState: this.show,\r\n                classState: this.show,\r\n                lastEvent: null\r\n            };\r\n        },\r\n\r\n        computed: {\r\n            /**\r\n             * Arrange event trigger hooks as array for all input types.\r\n             *\r\n             * @return Array\r\n             */\r\n            normalizedTriggers() {\r\n                if (this.triggers === false) {\r\n                    return [];\r\n                } else if (typeof this.triggers === 'string') {\r\n                    return [this.triggers];\r\n                }\r\n                return this.triggers;\r\n            },\r\n\r\n            /**\r\n             * Class property to be used for Popover rendering\r\n             *\r\n             * @return String\r\n             */\r\n            popoverAlignment() {\r\n                return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\r\n            },\r\n\r\n            /**\r\n             * Determine if the Popover should be shown.\r\n             *\r\n             * @return Boolean\r\n             */\r\n            showState() {\r\n                return this.show !== false && (this.triggerState || this.show);\r\n            }\r\n        },\r\n\r\n        watch: {\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            constraints() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Refresh Popover event triggers\r\n             * @param {Array} newTriggers\r\n             * @param {Array} oldTriggers\r\n             */\r\n            normalizedTriggers(newTriggers, oldTriggers) {\r\n                this.updateListeners(newTriggers, oldTriggers);\r\n            },\r\n\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            offset() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Refresh Tether display properties\r\n             */\r\n            placement() {\r\n                this.setOptions();\r\n            },\r\n\r\n            /**\r\n             * Affect 'show' state in response to status change\r\n             * @param  {Boolean} val\r\n             */\r\n            showState(val) {\r\n                const delay = this.getDelay(val);\r\n\r\n                clearTimeout(this._timeout);\r\n\r\n                if (delay) {\r\n                    this._timeout = setTimeout(() => this.togglePopover(val), delay);\r\n                } else {\r\n                    this.togglePopover(val);\r\n                }\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            /**\r\n             * Add all event hooks for the given trigger\r\n             * @param {String} trigger\r\n             */\r\n            addListener(trigger) {\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                    this._trigger.addEventListener(item, e => this.eventHandler(e));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Tidy removal of Tether object from the DOM\r\n             */\r\n            destroyTether() {\r\n                if (this._tether && !this.showState) {\r\n                    this._tether.destroy();\r\n                    this._tether = null;\r\n\r\n                    const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\r\n                    this._trigger.className = this._trigger.className.replace(regx, '');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Handle multiple event triggers\r\n             * @param  {Object} e\r\n             */\r\n            eventHandler(e) {\r\n                // If this event is right after a previous successful event, ignore it (debounce)\r\n                if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\r\n                    return;\r\n                }\r\n\r\n                // Look up the expected popover action for the event\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const trigger in TRIGGER_LISTENERS) {\r\n                    for (const event in TRIGGER_LISTENERS[trigger]) {\r\n                        if (event === e.type) {\r\n                            const action = TRIGGER_LISTENERS[trigger][event];\r\n\r\n                            // If the expected event action is the opposite of the current state, allow it\r\n                            if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\r\n                                this.triggerState = !this.triggerState;\r\n                                this.lastEvent = e.timeStamp;\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Get the currently applicable popover delay\r\n             *\r\n             * @returns Number\r\n             */\r\n            getDelay(state) {\r\n                if (typeof this.delay === 'object') {\r\n                    return state ? this.delay.show : this.delay.hide;\r\n                }\r\n\r\n                return this.delay;\r\n            },\r\n\r\n            /**\r\n             * Tether construct params for each show event.\r\n             *\r\n             * @return Object\r\n             */\r\n            getTetherOptions() {\r\n                return {\r\n                    attachment: PLACEMENT_PARAMS[this.placement],\r\n                    element: this._popover,\r\n                    target: this._trigger,\r\n                    classes: TETHER_CLASSES,\r\n                    classPrefix: TETHER_CLASS_PREFIX,\r\n                    offset: this.offset,\r\n                    constraints: this.constraints,\r\n                    targetOffset: this.targetOffset\r\n                };\r\n            },\r\n\r\n            /**\r\n             * Hide popover and fire event\r\n             */\r\n            hidePopover() {\r\n                this.classState = false;\r\n                clearTimeout(this._timeout);\r\n                this._timeout = setTimeout(() => {\r\n                    this._popover.style.display = 'none';\r\n                    this.destroyTether();\r\n                }, TRANSITION_DURATION);\r\n            },\r\n\r\n            /**\r\n             * Refresh the Popover position in order to respond to changes\r\n             */\r\n            refreshPosition() {\r\n                if (this._tether) {\r\n                    this.$nextTick(() => {\r\n                        this._tether.position();\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Remove all event hooks for the given trigger\r\n             * @param {String} trigger\r\n             */\r\n            removeListener(trigger) {\r\n                // eslint-disable-next-line guard-for-in\r\n                for (const item in TRIGGER_LISTENERS[trigger]) {\r\n                    this._trigger.removeEventListener(item, e => this.eventHandler(e));\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Update tether options\r\n             */\r\n            setOptions() {\r\n                if (this._tether) {\r\n                    this._tether.setOptions(this.getTetherOptions());\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Display popover and fire event\r\n             */\r\n            showPopover() {\r\n                clearTimeout(this._timeout);\r\n\r\n                if (!this._tether) {\r\n                    this._tether = new Tether(this.getTetherOptions());\r\n                }\r\n                this._popover.style.display = 'block';\r\n\r\n                // Make sure the popup is rendered in the correct location\r\n                this.refreshPosition();\r\n\r\n                this.$nextTick(() => {\r\n                    this.classState = true;\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Handle Popover show or hide instruction\r\n             */\r\n            togglePopover(newShowState) {\r\n                this.$emit('showChange', newShowState);\r\n                if (newShowState) {\r\n                    this.showPopover();\r\n                    this.$root.$emit('shown::popover');\r\n                } else {\r\n                    this.hidePopover();\r\n                    this.$root.$emit('hidden::popover');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Study the 'triggers' component property and apply all selected triggers\r\n             * @param {Array} triggers\r\n             * @param {Array} appliedTriggers\r\n             */\r\n            updateListeners(triggers, appliedTriggers = []) {\r\n                const newTriggers = [];\r\n                const removeTriggers = [];\r\n\r\n                // Look for new events not yet mapped (all of them on first load)\r\n                triggers.forEach(item => {\r\n                    if (appliedTriggers.indexOf(item) === -1) {\r\n                        newTriggers.push(item);\r\n                    }\r\n                });\r\n\r\n                // Disable any removed event triggers\r\n                appliedTriggers.forEach(item => {\r\n                    if (triggers.indexOf(item) === -1) {\r\n                        removeTriggers.push(item);\r\n                    }\r\n                });\r\n\r\n                // Apply trigger mapping changes\r\n                newTriggers.forEach(item => this.addListener(item));\r\n                removeTriggers.forEach(item => this.removeListener(item));\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.$root.$on('hide::popover', () => {\r\n                this.triggerState = false;\r\n            });\r\n        },\r\n\r\n        mounted() {\r\n            // Configure tether\r\n            this._trigger = this.$refs.trigger.children[0] || this.$refs.trigger;\r\n            this._popover = this.$refs.popover;\r\n            this._popover.style.display = 'none';\r\n            this._timeout = 0;\r\n\r\n            // Add listeners for specified triggers and complementary click event\r\n            this.updateListeners(this.normalizedTriggers);\r\n\r\n            // Display popover if prop is set on load\r\n            if (this.showState) {\r\n                this.showPopover();\r\n            }\r\n        },\r\n\r\n        updated() {\r\n            this.refreshPosition();\r\n        },\r\n\r\n        beforeDestroy() {\r\n            this.normalizedTriggers.forEach(item => this.removeListener(item));\r\n            clearTimeout(this._timeout);\r\n            this.destroyTether();\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\r\n    <table :class=\"['table',striped?'table-striped':'',hover?'table-hover':'']\">\r\n        <thead>\r\n        <tr>\r\n            <th @click=\"headClick(field,key)\"\r\n                :class=\"[field.sortable?'sorting':null,sortBy===key?'sorting_'+(sortDesc?'desc':'asc'):'',field.class?field.class:null]\"\r\n                v-for=\"field,key in fields\"\r\n                v-html=\"field.label\"\r\n            ></th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr v-for=\"(item,index) in _items\" :key=\"items_key\" :class=\"[item.state?'table-'+item.state:null]\" @click=\"rowClicked(item, index)\">\r\n            <td v-for=\"(field,key) in fields\" :class=\"[field.class?field.class:null]\">\r\n                <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\r\n            </td>\r\n        </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script>\r\n    import bPagination from './pagination.vue';\r\n\r\n    const toString = v => {\r\n        if (!v) {\r\n            return '';\r\n        }\r\n\r\n        if (v instanceof Object) {\r\n            return Object.keys(v).map(k => toString(v[k])).join(' ');\r\n        }\r\n\r\n        return String(v);\r\n    };\r\n\r\n    const defaultSortCompare = (a, b, sortBy) => {\r\n        return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {numeric: true});\r\n    };\r\n\r\n    export default {\r\n        components: {bPagination},\r\n        data() {\r\n            return {\r\n                sortBy: null,\r\n                sortDesc: true\r\n            };\r\n        },\r\n        props: {\r\n            items: {\r\n                type: Array,\r\n                default: () => []\r\n            },\r\n            fields: {\r\n                type: Object,\r\n                default: () => {\r\n                }\r\n            },\r\n            striped: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            hover: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            perPage: {\r\n                type: Number,\r\n                default: null\r\n            },\r\n            items_key: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            currentPage: {\r\n                type: Number,\r\n                default: 1\r\n            },\r\n            filter: {\r\n                type: [String, RegExp, Function],\r\n                default: null\r\n            },\r\n            sortCompare: {\r\n                type: Function,\r\n                default: null\r\n            },\r\n            itemsProvider: {\r\n                type: Function,\r\n                default: null\r\n            },\r\n            value: {\r\n                type: Array,\r\n                default: () => []\r\n            }\r\n        },\r\n\r\n        computed: {\r\n            _items() {\r\n                if (!this.items) {\r\n                    return [];\r\n                }\r\n\r\n                if (this.itemsProvider) {\r\n                    return this.itemsProvider(this);\r\n                }\r\n\r\n                let items = this.items.slice();\r\n\r\n                // Apply filter\r\n                if (this.filter) {\r\n                    if (this.filter instanceof Function) {\r\n                        items = items.filter(this.filter);\r\n                    } else {\r\n                        let regex;\r\n                        if (this.filter instanceof RegExp) {\r\n                            regex = this.filter;\r\n                        } else {\r\n                            regex = new RegExp('.*' + this.filter + '.*', 'ig');\r\n                        }\r\n                        items = items.filter(item => {\r\n                            const test = regex.test(toString(item));\r\n                            regex.lastIndex = 0;\r\n                            return test;\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Apply Sort\r\n                const sortCompare = this.sortCompare || defaultSortCompare;\r\n                if (this.sortBy) {\r\n                    items = items.sort((a, b) => {\r\n                        const r = sortCompare(a, b, this.sortBy);\r\n                        return this.sortDesc ? r : r * -1;\r\n                    });\r\n                }\r\n\r\n                this.$emit('input', items);\r\n\r\n                // Apply pagination\r\n                if (this.perPage) {\r\n                    items = items.slice((this.currentPage - 1) * this.perPage, this.currentPage * this.perPage);\r\n                }\r\n                return items;\r\n            }\r\n        },\r\n        methods: {\r\n            rowClicked(item, index) {\r\n                this.$emit('row-clicked', item, index);\r\n            },\r\n            headClick(field, key) {\r\n                if (!field.sortable) {\r\n                    this.sortBy = null;\r\n                    return;\r\n                }\r\n\r\n                if (key === this.sortBy) {\r\n                    this.sortDesc = !this.sortDesc;\r\n                }\r\n\r\n                this.sortBy = key;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n\r\n<style>\r\n    /* https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\r\n\r\n    table thead > tr > th.sorting_asc, table thead > tr > th.sorting_desc, table thead > tr > th.sorting,\r\n    table thead > tr > td.sorting_asc,\r\n    table thead > tr > td.sorting_desc,\r\n    table thead > tr > td.sorting {\r\n        padding-right: 30px;\r\n    }\r\n\r\n    table thead > tr > th:active,\r\n    table thead > tr > td:active {\r\n        outline: none;\r\n    }\r\n\r\n    table thead .sorting,\r\n    table thead .sorting_asc,\r\n    table thead .sorting_desc,\r\n    table thead .sorting_asc_disabled,\r\n    table thead .sorting_desc_disabled {\r\n        cursor: pointer;\r\n        position: relative;\r\n    }\r\n\r\n    table thead .sorting:before, table thead .sorting:after,\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_asc:after,\r\n    table thead .sorting_desc:before,\r\n    table thead .sorting_desc:after,\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_asc_disabled:after,\r\n    table thead .sorting_desc_disabled:before,\r\n    table thead .sorting_desc_disabled:after {\r\n        position: absolute;\r\n        bottom: 0.9em;\r\n        display: block;\r\n        opacity: 0.3;\r\n    }\r\n\r\n    table thead .sorting:before,\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_desc:before,\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_desc_disabled:before {\r\n        right: 1em;\r\n        content: \"\\2191\";\r\n    }\r\n\r\n    table thead .sorting:after,\r\n    table thead .sorting_asc:after,\r\n    table thead .sorting_desc:after,\r\n    table thead .sorting_asc_disabled:after,\r\n    table thead .sorting_desc_disabled:after {\r\n        right: 0.5em;\r\n        content: \"\\2193\";\r\n    }\r\n\r\n    table thead .sorting_asc:before,\r\n    table thead .sorting_desc:after {\r\n        opacity: 1;\r\n    }\r\n\r\n    table thead .sorting_asc_disabled:before,\r\n    table thead .sorting_desc_disabled:after {\r\n        opacity: 0;\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"tabs\">\r\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n\r\n        <div :class=\"{'card-header': card}\">\r\n            <ul :class=\"['nav','nav-' + navStyle, card ? 'card-header-'+navStyle : null]\"\r\n                role=\"tablist\"\r\n                tabindex=\"0\"\r\n                :aria-setsize=\"tabs.length\"\r\n                :aria-posinset=\"currentTab + 1\"\r\n                @keydown.left=\"prevTab\"\r\n                @keydown.up=\"prevTab\"\r\n                @keydown.right=\"nextTab\"\r\n                @keydown.down=\"nextTab\"\r\n                @keydown.shift.left=\"setTab(-1,false,1)\"\r\n                @keydown.shift.up=\"setTab(-1,false,1)\"\r\n                @keydown.shift.right=\"setTab(tabs.length,false,-1)\"\r\n                @keydown.shift.down=\"setTab(tabs.length,false,-1)\"\r\n            >\r\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\" role=\"presentation\">\r\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                       :href=\"tab.href\"\r\n                       :role=\"tab\"\r\n                       :aria-selected=\"tab.localActive ? 'true' : 'false'\"\r\n                       :aria-controls=\"tab.id || null\"\r\n                       :id=\"tab.controlledBy || null\"\r\n                       @click.prevent.stop=\"setTab(index)\"\r\n                       @keydown.space.prevent.stop=\"setTab(index)\"\r\n                       @keydown.enter.prevent.stop=\"setTab(index)\"\r\n                       tabindex=\"-1\"\r\n                       v-if=\"!tab.headHtml\"\r\n                       v-html=\"tab.title\"\r\n                    ></a>\r\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\r\n                         role=\"heading\"\r\n                         tabindex=\"-1\"\r\n                         v-else\r\n                         v-html=\"tab.headHtml\"></div>\r\n                </li>\r\n                <slot name=\"tabs\"></slot>\r\n            </ul>\r\n        </div>\r\n\r\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\r\n            <slot></slot>\r\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import observeDom from '../utils/observe-dom';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                currentTab: this.value,\r\n                tabs: []\r\n            };\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            noFade: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            card: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            small: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            value: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n            pills: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            lazy: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            bottom: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        watch: {\r\n            currentTab(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\r\n                this.$emit('input', val);\r\n                this.tabs[val].$emit('click');\r\n            },\r\n            value(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.setTab(val);\r\n            },\r\n            fade(val, old) {\r\n                if (val === old) {\r\n                    return;\r\n                }\r\n\r\n                this.tabs.forEach(item => {\r\n                    this.$set(item, 'fade', val);\r\n                });\r\n            }\r\n        },\r\n        computed: {\r\n            fade() {\r\n                return !this.noFade;\r\n            },\r\n            navStyle() {\r\n                return this.pills ? 'pills' : 'tabs';\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * Util: Return the sign of a number (as -1, 0, or 1)\r\n             */\r\n            sign(x) {\r\n                return (x === 0) ? 0 : (x > 0 ? 1 : -1);\r\n            },\r\n\r\n            /**\r\n             * Move to next tab\r\n             */\r\n            nextTab() {\r\n                this.setTab(this.currentTab, false, 1);\r\n            },\r\n\r\n            /**\r\n             * Move to previous tab\r\n             */\r\n            previousTab() {\r\n                this.setTab(this.currentTab, false, -1);\r\n            },\r\n\r\n            /**\r\n             * Set active tab on the tabs collection and the child 'tab' component\r\n             */\r\n            setTab(index, force, offset) {\r\n                offset = offset || 0;\r\n\r\n                // Prevent setting same tab!\r\n                if (!force && (index + offset) === this.currentTab) {\r\n                    return;\r\n                }\r\n\r\n                const tab = this.tabs[index + offset];\r\n\r\n                // Don't go beyond indexes!\r\n                if (!tab) {\r\n                    return;\r\n                }\r\n\r\n                // Ignore or Skip disabled\r\n                if (tab.disabled) {\r\n                    if (offset) {\r\n                        // Skip to next non disabled tab in offset direction (recursive)\r\n                        this.setTab(index, force, offset + this.sign(offset));\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // Deactivate previous active tab\r\n                if (this.tabs[this.currentTab]) {\r\n                    this.$set(this.tabs[this.currentTab], 'localActive', false);\r\n                }\r\n\r\n                // Set new tab as active\r\n                this.$set(tab, 'localActive', true);\r\n\r\n                // Update currentTab\r\n                this.currentTab = index + offset;\r\n            },\r\n\r\n            /**\r\n             * Dynamically update tabs\r\n             */\r\n            updateTabs() {\r\n                // Probe tabs\r\n                if (this.$slots.default) {\r\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\r\n                        .map(tab => tab.componentInstance);\r\n                } else {\r\n                    this.tabs = [];\r\n                }\r\n\r\n                this.tabs.forEach(tab => {\r\n                    this.$set(tab, 'fade', this.fade);\r\n                    this.$set(tab, 'lazy', this.lazy);\r\n                });\r\n\r\n                // Set initial active tab\r\n                let tabIndex = this.currentTab;\r\n\r\n                if (this.currentTab === null || this.currentTab === undefined) {\r\n                    this.tabs.forEach((tab, index) => {\r\n                        if (tab.active) {\r\n                            tabIndex = index;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Workaround to fix problem when currentTab is removed\r\n                let offset = 0;\r\n                if (tabIndex > this.tabs.length - 1) {\r\n                    offset = -1;\r\n                }\r\n\r\n                this.setTab(tabIndex || 0, true, offset);\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateTabs();\r\n\r\n            // Observe Child changes so we can notify tabs change\r\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\r\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\r\n        <div role=\"tabpanel\"\r\n             :class=\"['tab-pane', {show, fade, disabled, active: localActive}]\"\r\n             :aria-hidden=\"localActive ? 'false' : 'true'\"\r\n             :aria-expanded=\"localActive ? 'true' : 'false'\"\r\n             :aria-lablelledby=\"controlledBy || null\"\r\n             v-if=\"localActive || !lazy\"\r\n             v-show=\"localActive || lazy\"\r\n             ref=\"panel\">\r\n             <slot></slot>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        methods: {\r\n            enter() {\r\n                this.show = true;\r\n            },\r\n            beforeLeave() {\r\n                this.show = false;\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                fade: false,\r\n                localActive: false,\r\n                lazy: true,\r\n                show: false\r\n            };\r\n        },\r\n        computed: {\r\n            controlledBy() {\r\n                return this.buttonId || (this.id ? (this.id + '__BV_tab_button__') : null);\r\n            }\r\n        },\r\n        props: {\r\n            id: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            buttonId: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            headHtml: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            active: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            href: {\r\n                type: String,\r\n                default: '#'\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div tabindex=\"-1\" :class=\"['tooltip','tooltip-' + this.placement]\"\n             ref=\"popover\" @focus=\"$emit('focus')\" @blur=\"$emit('blur')\"\n             :style=\"{opacity:showState?1:0}\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content || title\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block !important;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import bPopover from './popover.vue';\n\n    export default {\n        extends: bPopover,\n        props: {\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","import target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('collapse::toggle', target);\r\n            });\r\n        });\r\n    }\r\n};\r\n","import target from './_target';\r\n\r\nconst listen_types = {click: true};\r\n\r\nexport default {\r\n    bind(el, binding) {\r\n        target(el, binding, listen_types, ({targets, vm}) => {\r\n            targets.forEach(target => {\r\n                vm.$root.$emit('show::modal', target, el);\r\n            });\r\n        });\r\n    }\r\n};\r\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["observeDOM","el","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","obs","mutations","addedNodes","length","removedNodes","observe","Object","assign","childList","subtree","targets","binding","listen_types","fn","vm","__vue__","console","warn","keys","modifiers","filter","t","all_listen_types","value","push","listener","forEach","type","log","render","data","countDownTimerId","dismissed","created","this","state","computed","classObject","alertVariant","dismissible","variant","localShow","show","props","String","default","Boolean","dismissLabel","Number","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","let","dismissCountDown","setInterval","routerAvailable","$router","_href","disabled","href","to","_to","tag","exact","append","replace","activeClass","exactActiveClass","event","Array","click","e","preventDefault","stopPropagation","$root","components","bLink","componentType","items2","last","items","map","item","text","link","active","__active","required","onclick","btnVariant","btnSize","btnBlock","btnDisabled","inactive","block","size","ITEM_SELECTOR","join","toolbar","vertical","justify","isKeyNav","toolbarkeyNav","toobarKeyNav","focusNext","prev","getItems","index","indexOf","target","focus","focusFirst","focusLast","prototype","slice","call","$el","querySelectorAll","tabIndex","document","documentElement","_clickOutListener","destroyed","removeEventListener","contains","clickOutListener","split","dropup","right","$on","visible","old","children","body","noop","toggle","$nextTick","onTab","onEsc","$refs","button","up","menu","mixins","clickOut","dropdown","dropdownToggle","caret","id","left","blockClass","overlay","cardVariant","cardInverse","inverse","cardAlign","align","header","showHeader","headerTag","footer","showFooter","footerTag","title","subTitle","noBlock","img","imgAlt","deck","columns","DIRECTION","next","current","isSliding","slides","interval","indicators","controls","height","background","pause","_intervalId","start","classList","add","val","oldVal","direction","currentSlide","nextSlide","_carouselAnimation","setTimeout","remove","clearTimeout","contentVisibleUp","caption","contentClasses","classes","carousel-caption","navbar-collapse","isNav","enter","style","realHeight","getComputedStyle","offsetHeight","leave","clearHeight","inBrowser","UNSAFE_UID","process","env","_id","_uid","generateId","bButton","toggleText","extends","dropdown_click","selected","displayItem","returnObject","model","forceDefault","defaultText","result","list","position","select","hub","inline","labelId","label","descriptionId","description","feedbackId","feedback","describedBy","i","inputState","labelLayout","labelSrOnly","horizontal","labelSize","labelAlignClass","labelTextAlign","inputLayout","updateTarget","content","input","querySelector","inputSelector","updated","inputClass","custom","plain","name","checkboxClass","custom-control","form-check-inline","formMixin","formCheckBoxMixin","prop","uncheckedValue","checked","formOptions","options","isArray","option","valueField","textField","selectedValue","localValue","old_value","formOptionsMixin","stacked","staticValue","formatter","Function","bFormInputStatic","rowsCount","toString","format","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","static","placeholder","rows","textarea","selectedFile","dragging","selectedLabel","multiple","selectedFormat","file","computedChooseLabel","chooseLabel","newVal","onFileChange","dataTransfer","noTraverse","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","setFiles","concat","apply","files","filesArray","match","accept","dragover","noDrop","dropEffect","drop","path","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","action","myTag","verticalAlignClass","verticalAlign","rightAlign","FOCUS_SELECTOR","bBtn","is_visible","return_focus","returnFocus","new_val","old_val","hide","fade","closeTitle","okTitle","closeOnBackdrop","closeOnEsc","hideHeader","hideFooter","hideHeaderClose","enforceFocus","isOK","canceled","cancel","returnFocusTo","onClickOut","triggerEl","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","fixed","sticky","toggleable","toggleBreakpoint","diff","showPrev","showNext","currentPage","numberOfPages","Math","ceil","totalRows","perPage","pageLinks","limit","secondaryVariant","_return","newPage","oldPage","newValue","oldValue","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","TETHER_CLASS_PREFIX","TETHER_CLASSES","element","enabled","TRANSITION_DURATION","constraints","debounce","validator","delay","offset","test","placement","popoverStyle","targetOffset","triggers","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","getDelay","_timeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","RegExp","className","timeStamp","getTetherOptions","attachment","_popover","classPrefix","hidePopover","display","refreshPosition","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","beforeDestroy","progressVariant","striped","animated","styleObject","width","progress","p","pow","precision","round","max","showProgress","showValue","v","k","defaultSortCompare","a","b","sortBy","localeCompare","undefined","numeric","bPagination","sortDesc","fields","items_key","sortCompare","itemsProvider","_items","regex","lastIndex","sort","r","rowClicked","headClick","field","key","sortable","currentTab","noFade","card","small","lazy","setTab","$set","navStyle","sign","x","nextTab","previousTab","force","tab","updateTabs","$slots","componentInstance","observeDom","tabsContainer","bind","beforeLeave","localActive","controlledBy","buttonId","headHtml","bPopover","ref","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"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"}